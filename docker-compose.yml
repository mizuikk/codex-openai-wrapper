services:
  codex-openai-wrapper-worker:
    build:
      context: .
      dockerfile: Dockerfile
      target: dev
    container_name: codex-openai-wrapper
    ports:
      - "8787:8787"  # Host:Container port mapping
    volumes:
      # Mount project directory for hot reloading during development
      - .:/app
      # Exclude node_modules to avoid conflicts between host and container
      - /app/node_modules
      # Create named volume for persistent storage (KV, R2, etc.)
      # This ensures data survives container restarts
      - codex_openai_wrapper_storage:/app/.mf
    environment:
      # Set NODE_ENV for development
      - NODE_ENV=development
      # Scheme B defaults: do not generate [vars], but emit .dev.vars from env
      - GENERATE_WRANGLER_VARS=0
      - WRANGLER_EMIT_DEV_VARS=1
    # Restart policy
    restart: unless-stopped
    # Health check
    healthcheck:
      test: ["CMD", "node", "-e", "fetch('http://localhost:8787/health').then(r=>process.exit(r.ok?0:1)).catch(()=>process.exit(1))"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s

# Named volumes for data persistence
volumes:
  codex_openai_wrapper_storage:
    driver: local
