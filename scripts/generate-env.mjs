import os from 'os';

function getOsType() {
    const type = os.type();
    if (type === 'Windows_NT') return 'Windows';
    if (type === 'Darwin') return 'Mac OS';
    return type; // 'Linux', etc.
}

function getArch() {
    const arch = os.arch();
    if (arch === 'x64') return 'x86_64';
    // arm64 is already a valid value for os.arch() on Apple Silicon
    return arch;
}

const envVars = {
    // Terminal Info
    TERM_PROGRAM: process.env.TERM_PROGRAM || '',
    TERM_PROGRAM_VERSION: process.env.TERM_PROGRAM_VERSION || '',

    // OS Info
    FORWARD_CLIENT_HEADERS_CODEX_OS_TYPE: getOsType(),
    FORWARD_CLIENT_HEADERS_CODEX_OS_VERSION: os.release(),
    FORWARD_CLIENT_HEADERS_CODEX_ARCH: getArch(),
};

console.log('# Generated by "npm run gen:env". Copy these values into your .dev.vars file.');
console.log('#--------------------------------------------------------------------------');
for (const [key, value] of Object.entries(envVars)) {
    // Only print if value is not empty
    if (value) {
        console.log(`${key}="${value}"`);
    }
}
console.log('#--------------------------------------------------------------------------');
